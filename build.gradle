plugins {
    id 'org.springframework.boot' version "2.4.4"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'icu.bitgo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
//    mavenCentral()
}


ext {
    set('springCloudVersion', "2020.0.2")
    set('springBootVersion',"2.4.4")
    set('mybatisPlusVersion', "3.4.2")
    set('lombokVersion', "1.18.20")
    set('mysqlVersion', "8.0.23")
    set('nacosVersion', "2021.1")
    set('druidVersion', "1.2.5")
    set('jdbcVersion', "5.3.5")
    set('dubboVersion', "2.7.9")
    set('sentinelVersion', "2021.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation "org.springframework.boot:spring-boot-starter-mail:$springBootVersion"
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation "com.baomidou:mybatis-plus-boot-starter:$mybatisPlusVersion"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:$nacosVersion"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:$nacosVersion"
    implementation "com.alibaba:druid-spring-boot-starter:$druidVersion"
    implementation "org.apache.dubbo:dubbo-spring-boot-autoconfigure:$dubboVersion"
    implementation "org.apache.dubbo:dubbo-spring-boot-starter:$dubboVersion"
//    implementation "com.alibaba.csp:sentinel-core:$sentinelVersion"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:2021.1"




    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    runtimeOnly "mysql:mysql-connector-java:$mysqlVersion"
    implementation "org.springframework:spring-jdbc:$jdbcVersion"


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}



test {
    useJUnitPlatform()
}
